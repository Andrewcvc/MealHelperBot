from enum import Enum
from aiogram import types
from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext

from keyboards.reply import get_keyboard

class Action(str, Enum):
    BACK = 'back'
    DELETE = 'delete'
    EDIT = 'edit'
    CANCLE = 'cancle'
    add_dish = 'add_dish'
    main = 'main_page'
    dish_list = 'dish_list'
    edit_name = 'edit_name'
    edit_category = 'edit_category'
    dish_of_the_day = 'dish_of_the_day'
    dish_day = 'dish_day'
    del_dish_day = 'del_dish_day'
    menu_for_week = 'menu_for_week'
    dish_of_the_week = 'dish_of_the_week'
    set_algorithm = 'set_algorithm'
    del_weekly_dishes = 'del_weekly_dishes'
    algorithm_settings = 'algorithm_settings'
    clear_algorithm = 'clear_algorithm'
    feedback = 'feedback'

class UserAction(CallbackData, prefix="act"):
    action: Action

class MenuCallBack(CallbackData, prefix="menu"):
    level: int
    menu_name: str
    category: int | None = None
    page: int = 1
    product_id: int | None = None

def get_user_main_btns(*, level:int, sizes: tuple[int] = (2,)):
    keyboard = InlineKeyboardBuilder()
    btns = {
        "–î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—Éüç≤" : "add_dish",
        "–°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–≤üßæ" : "dish_list",
        "–ú–µ–Ω—é –Ω–∞ —Ç–∏–∂–¥–µ–Ω—åüçΩÔ∏è" : "menu_for_week", 
        "–°—Ç—Ä–∞–≤–∞ –¥–Ω—èüç≥" : "dish_of_the_day",           
        "–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫üìù" : "feedback",
    }

    for text, menu_name in btns.items():
        if menu_name == 'add_dish':
            keyboard.add(InlineKeyboardButton(text=text, callback_data=MenuCallBack(level=level+1, menu_name=menu_name).pack())) #pack() - –º–µ—Ç–æ–¥ –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏ –¥–∞–Ω–∏—Ö –≤ —Å—Ç—Ä–æ–∫—É
        elif menu_name == 'dish_list':
            keyboard.add(InlineKeyboardButton(text=text, callback_data=MenuCallBack(level=2, menu_name=menu_name).pack()))
        elif menu_name == 'menu_for_week':
            keyboard.add(InlineKeyboardButton(text=text, callback_data=UserAction(action=Action.menu_for_week).pack()))
        elif menu_name == 'dish_of_the_day':
            keyboard.add(InlineKeyboardButton(text=text, callback_data=UserAction(action=Action.dish_of_the_day).pack()))
        elif menu_name == 'feedback':
            keyboard.add(InlineKeyboardButton(text=text, callback_data=UserAction(action=Action.feedback).pack()))
        else:
            keyboard.add(InlineKeyboardButton(text=text, callback_data=MenuCallBack(level=level, menu_name=menu_name).pack()))
    return keyboard.adjust(*sizes).as_markup()

#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ—á–∞—Ç–∫–æ–≤–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ add_dish
def get_main_menu_btn(*, level: int, sizes: tuple[int] = (2,)):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=MenuCallBack(level=level-1, menu_name='main').pack()))
    return keyboard.row().as_markup()

#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑—ñ —Å–ø–∏—Å–∫–æ–º —Å—Ç—Ä–∞–≤

def get_dish_list_btns(sizes: tuple[int] = (2, )
):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–í–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç—Ä–∞–≤—É‚ùå", callback_data=UserAction(action=Action.DELETE).pack()))
    keyboard.add(InlineKeyboardButton(text="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É‚úèÔ∏è", callback_data=UserAction(action=Action.EDIT).pack()))
    keyboard.add(InlineKeyboardButton(text="–î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—Éüç≤", callback_data=UserAction(action=Action.add_dish).pack()))
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=UserAction(action=Action.main).pack()))
    keyboard.add(InlineKeyboardButton(text="–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç—Ä–∞–≤üßæ", callback_data=UserAction(action=Action.dish_list).pack()))
    
    return keyboard.adjust(*sizes).as_markup()

#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑ –ø—É—Å—Ç–∏–º —Å–ø–∏—Å–∫–æ–º —Å—Ç—Ä–∞–≤
def get_empty_list_btns(sizes: tuple[int] = (2, )
):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—Éüç≤", callback_data=UserAction(action=Action.add_dish).pack()))
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=UserAction(action=Action.main).pack()))
    keyboard.add(InlineKeyboardButton(text="–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç—Ä–∞–≤üßæ", callback_data=UserAction(action=Action.dish_list).pack()))
    
    return keyboard.adjust(*sizes).as_markup()

#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
def get_edit_btns(sizes: tuple[int] = (2,)):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–ù–∞–∑–≤—É‚úèÔ∏è", callback_data=UserAction(action=Action.edit_name).pack()))
    keyboard.add(InlineKeyboardButton(text="–ö–∞—Ç–µ–≥–æ—Ä—ñ—éüìÅ", callback_data=UserAction(action=Action.edit_category).pack()))
    keyboard.add(InlineKeyboardButton(text="–í—ñ–¥–º—ñ–Ω–∏—Ç–∏‚ùå", callback_data=UserAction(action=Action.CANCLE).pack()))
    return keyboard.adjust(*sizes).as_markup()

#–ö–Ω–æ–ø–∫–∞ –≤—ñ–¥–º—ñ–Ω–∏—Ç–∏
def get_cancle_btn(sizes: tuple[int] = (1, )):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–í—ñ–¥–º—ñ–Ω–∏—Ç–∏‚ùå", callback_data=UserAction(action=Action.CANCLE).pack()))
    return keyboard.adjust(*sizes).as_markup()

#–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –ø—ñ—Å–ª—è —Ç–æ–≥–æ —è–∫ —Å—Ç—Ä–∞–≤—É –¥–æ–¥–∞–Ω–æ
def get_user_added_btns(sizes: tuple[int] = (2, )):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=UserAction(action=Action.main).pack()))
    keyboard.add(InlineKeyboardButton(text="–î–æ–¥–∞—Ç–∏ –Ω–æ–≤—É —Å—Ç—Ä–∞–≤—Éüç≤", callback_data=UserAction(action=Action.add_dish).pack()))
    keyboard.add(InlineKeyboardButton(text="–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó —Å—Ç—Ä–∞–≤üßæ", callback_data=UserAction(action=Action.dish_list).pack()))
    return keyboard.adjust(*sizes).as_markup()

def get_user_catalog_btns(*, level: int, categories: list, sizes: tuple[int] = (2,)):
    keyboard = InlineKeyboardBuilder()
    
    for c in categories:
        keyboard.add(InlineKeyboardButton(text=c.name, callback_data=MenuCallBack(level=level+2, menu_name=c.name, category=c.id).pack()))
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=UserAction(action=Action.main).pack()))
    return keyboard.adjust(*sizes).as_markup()


#########*–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ —Å—Ç—Ä–∞–≤–∏ –¥–Ω—è
def get_day_dish_btns(sizes: tuple[int] = (2, )):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –±–ª—é–¥–æüç≤", callback_data=UserAction(action=Action.dish_day).pack()))
    keyboard.add(InlineKeyboardButton(text="–û—á–∏—Å—Ç–∏—Ç–∏ —Å–ø–∏—Å–æ–∫üóëÔ∏è", callback_data=UserAction(action=Action.del_dish_day).pack()))
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=UserAction(action=Action.main).pack()))
    
    return keyboard.adjust(*sizes).as_markup()

##############*–ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ –¥–ª—è –º–µ–Ω—é –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å
def get_weekly_dish_btns(sizes: tuple[int] = (2, )):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Å—Ç—Ä–∞–≤–∏üîë", callback_data=UserAction(action=Action.dish_of_the_week).pack()))
    keyboard.add(InlineKeyboardButton(text="–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º‚öôÔ∏è", callback_data=UserAction(action=Action.algorithm_settings).pack()))
    keyboard.add(InlineKeyboardButton(text="–û—á–∏—Å—Ç–∏—Ç–∏ —Å–ø–∏—Å–æ–∫üóëÔ∏è", callback_data=UserAction(action=Action.del_weekly_dishes).pack()))
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=UserAction(action=Action.main).pack()))
    
    return keyboard.adjust(*sizes).as_markup()

def get_algorithm_settings_btns(sizes: tuple[int] = (2, )):
    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="–ó–∞–¥–∞—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–º‚öôÔ∏è", callback_data=UserAction(action=Action.set_algorithm).pack()))
    keyboard.add(InlineKeyboardButton(text="–û—á–∏—Å—Ç–∏—Ç–∏ –∞–ª–≥–æ—Ä–∏—Ç–ºüóëÔ∏è", callback_data=UserAction(action=Action.clear_algorithm).pack()))
    keyboard.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚Ü©Ô∏è", callback_data=UserAction(action=Action.menu_for_week).pack()))
    keyboard.add(InlineKeyboardButton(text="–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—éüè†", callback_data=UserAction(action=Action.main).pack()))
    
    return keyboard.adjust(*sizes).as_markup()

def get_callback_btns(
    *,
    btns: dict[str, str],
    sizes: tuple[int] = (2,)):
    
    keyboard = InlineKeyboardBuilder()

    for text, data in btns.items():
        keyboard.add(InlineKeyboardButton(text=text, callback_data=data))
    return keyboard.adjust(*sizes).as_markup()
